---
import { Heading } from "@components/elements";
import type { HTMLAttributes } from "astro/types";

interface Props extends HTMLAttributes<"li"> {
	headline: string;
	image?: string;
}

const { headline, image, class: className, ...attrs } = Astro.props;
---

<li class={`rolodex__item${className ? ` | ${className}` : ""}`} {...attrs}>
	<div
		class="rolodex__card | sidebar | bg-slate-background text-slate-foreground border-slate-foreground border-2 rounded-2xl overflow-hidden"
		data-direction="rtl"
	>
		<div class="rolodex__body | repel | p-s-m" data-direction="column">
			<Heading level={3} class="heading-highlight">{headline}</Heading>
			<slot />
		</div>
		{
			image ? (
				<div class="rolodex__wrap-image">
					<img src={image} alt="" />
				</div>
			) : null
		}
	</div>
</li>

<style>
	.rolodex__item {
		--index0: calc(var(--index) - 1); /* 0-based index */
		--reverse-index: calc(var(--_rolodex-number-of-items) - var(--index0)); /* reverse index */
		--reverse-index0: calc(var(--reverse-index) - 1); /* 0-based reverse index */

		top: var(--spacing-gutter); /* [1] */

		/*
		Only create the "rolodex" effect when the user has no preference for
		reduced motion and the screen and the container are large enough.
		1. min-block-size + m * 2
		2. 90rem = retain desk
		*/
		@media (prefers-reduced-motion: no-preference) {
			@media (min-height: 32.5em) {
				@container retain (inline-size >= 90rem) {
					position: sticky;
				}
			}
		}
	}

	/*
	[1] when the rolodex item is sticky we want to space it from the top.
	*/
	.rolodex__card {
		--grid-placement: auto-fit;
		--grid-min-item-size: clamp(12rem, 50cqi, 25rem);
		--sidebar-target-width: 25rem;
		--sidebar-content-min-width: 60%;
		--start-range: calc(var(--index0) / var(--_rolodex-number-of-items) * 100%);
		--end-range: calc((var(--index)) / var(--_rolodex-number-of-items) * 100%);

		min-block-size: 28rem;
		align-items: stretch;
		transform-origin: top;

		/* @media (prefers-reduced-motion: no-preference) {
			animation: linear rolodex-stack forwards;
			animation-timeline: --rolodex-scrolls-in-body;
			animation-range: exit-crossing var(--start-range) exit-crossing var(--end-range);
		} */
	}

	/*
	Images are replaced content so they behave a little different than
	regular elements. Thats why we need to position the image absolute to
	make sure it doesn't get squished and skewed.
	@TODO: check if this is still the right solution
	*/
	.rolodex__wrap-image {
		position: relative;
		aspect-ratio: 19/10;

		> img {
			position: absolute;
			inset: 0;
			inline-size: 100%;
			block-size: 100%;
			object-fit: cover;
		}
	}

	.rolodex__body {
		--repel-alignment: start;
	}

	@keyframes rolodex-stack {
		to {
			transform: scale(calc(1.05 - calc(0.05 * var(--reverse-index))));
		}
	}
</style>
